# 前端生产环境Dockerfile - 多阶段构建
FROM node:18-alpine AS builder

# 设置工作目录
WORKDIR /app

# 设置环境变量
ENV NODE_ENV=production
ENV REACT_APP_UI_MODE=modern

# 复制package文件
COPY package*.json ./

# 安装依赖
RUN npm ci --only=production

# 安装现代化UI所需的额外依赖
RUN npm install \
    @fontsource/inter \
    ag-grid-react \
    ag-grid-community

# 复制源代码
COPY . .

# 复制现代化UI准备脚本
COPY modern-ui/prepare-modern-ui.sh ./

# 运行现代化UI准备脚本
RUN chmod +x prepare-modern-ui.sh && ./prepare-modern-ui.sh

# 更新入口文件以使用现代化UI
RUN cat > src/index.js << 'EOF'
import React from 'react';
import ReactDOM from 'react-dom/client';
import ModernApp from './ModernApp';
import '@fontsource/inter/400.css';
import '@fontsource/inter/500.css';
import '@fontsource/inter/600.css';
import '@fontsource/inter/700.css';
import './styles/modern.css';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<ModernApp />);
EOF

# 构建应用
RUN npm run build

# 生产阶段 - 使用nginx提供静态文件
FROM nginx:alpine

# 安装curl用于健康检查
RUN apk add --no-cache curl

# 复制构建产物
COPY --from=builder /app/build /usr/share/nginx/html

# 复制nginx配置
COPY nginx.conf /etc/nginx/conf.d/default.conf

# 暴露端口
EXPOSE 80

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost || exit 1

# 启动nginx
CMD ["nginx", "-g", "daemon off;"]
