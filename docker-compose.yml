# Docker Compose 开发环境配置
# 简化版 - 直接在根目录使用
version: '3.8'

services:
  # 后端API服务
  backend:
    build:
      context: .
      dockerfile: ./api/Dockerfile
    container_name: dataquery-backend
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - ENV=development
    volumes:
      - ./api:/app
      - ./data:/app/data
      - backend_temp:/app/temp_files
      - backend_exports:/app/exports
    networks:
      - dataquery-network
    restart: unless-stopped
    # 增加资源限制以支持大数据JOIN操作
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '4.0'
        reservations:
          memory: 4G
          cpus: '2.0'
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dataquery-frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://dataquery-backend:8000
      - REACT_APP_UI_MODE=modern
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - DOCKER_ENV=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - dataquery-network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    stdin_open: true
    tty: true

volumes:
  backend_temp:
    driver: local
  backend_exports:
    driver: local

networks:
  dataquery-network:
    driver: bridge