# 数据源刷新模式约束规则

## 🎯 数据源刷新统一模式

### 1. 刷新触发机制
- **异步任务完成**: 自动触发数据源列表刷新
- **文件上传完成**: 自动触发数据源列表刷新
- **数据库连接**: 自动触发数据源列表刷新
- **表删除操作**: 自动触发数据源列表刷新
- **手动刷新**: 用户主动触发刷新

### 2. 刷新执行流程
- **缓存清理**: 首先调用 `requestManager.clearAllCache()`
- **数据重新获取**: 调用 `loadInitialData(true)` 强制刷新
- **状态更新**: 更新所有相关组件的状态
- **UI同步**: 确保所有页面显示最新数据

### 3. 全局刷新范围
- **图形化查询**: 可用数据源列表自动更新
- **数据表管理**: 表列表自动更新
- **SQL执行器**: 表选择器自动更新
- **异步任务列表**: 任务状态自动更新
- **数据源列表**: 所有数据源自动更新

## 🚫 严格禁止的刷新模式
- **禁止绕过** `requestManager.clearAllCache()` 缓存清理
- **禁止使用** 旧的 `getDuckDBTables()` API
- **禁止忽略** 异步任务完成后的刷新
- **禁止硬编码** 刷新逻辑到各个组件
- **禁止使用** 不一致的API端点

## ✅ 必须遵循的刷新规范
- **统一使用** `triggerRefresh()` 触发刷新
- **统一使用** `requestManager.clearAllCache()` 清理缓存
- **统一使用** `getDuckDBTablesEnhanced()` 获取数据
- **统一使用** `onTaskCompleted` 回调处理任务完成
- **统一使用** 防抖机制避免重复刷新

## 📁 相关文件参考
- 主应用: [frontend/src/ShadcnApp.jsx](mdc:frontend/src/ShadcnApp.jsx)
- 请求管理器: [frontend/src/utils/requestManager.js](mdc:frontend/src/utils/requestManager.js)
- API客户端: [frontend/src/services/apiClient.js](mdc:frontend/src/services/apiClient.js)
- 异步任务列表: [frontend/src/components/AsyncTasks/AsyncTaskList.jsx](mdc:frontend/src/components/AsyncTasks/AsyncTaskList.jsx)